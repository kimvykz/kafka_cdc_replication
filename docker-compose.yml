version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    volumes:
      - ./data/zookeeper:/data
      - ./data/datalog/zookeeper:/datalog
    networks:
      - kafka-net

  kafka-1:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-1
    ports:
      - "9192:9192"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-1:9093,OUTSIDE://kafka-1:9092,EXTERNAL://localhost:9192
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092,EXTERNAL://0.0.0.0:9192
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
    volumes:
      - ./data/kafka-1:/var/lib/kafka/data
      - ./data/logs/kafka-1:/var/log/kafka
    networks:
      - kafka-net

  kafka-2:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-2
    ports:
      - "9193:9193"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-2:9093,OUTSIDE://kafka-2:9092,EXTERNAL://localhost:9193
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092,EXTERNAL://0.0.0.0:9193
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
    volumes:
      - ./data/kafka-2:/var/lib/kafka/data
      - ./data/logs/kafka-2:/var/log/kafka
    networks:
      - kafka-net  

  kafka-3:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-3
    ports:
      - "9194:9194"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-3:9093,OUTSIDE://kafka-3:9092,EXTERNAL://localhost:9194
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092,EXTERNAL://0.0.0.0:9194
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
    volumes:
      - ./data/kafka-3:/var/lib/kafka/data
      - ./data/logs/kafka-3:/var/log/kafka
    networks:
      - kafka-net

  kafka-4:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-4
    ports:
      - "9195:9195"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-4:9093,OUTSIDE://kafka-4:9092,EXTERNAL://localhost:9195
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092,EXTERNAL://0.0.0.0:9195
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 2
      KAFKA_MIN_INSYNC_REPLICAS: 1
    volumes:
      - ./data/kafka-4:/var/lib/kafka/data
      - ./data/logs/kafka-4:/var/log/kafka
    networks:
      - kafka-net

  kafdrop:
    image: obsidiandynamics/kafdrop:4.1.0
    container_name: kafdrop
    environment:
      KAFKA_BROKERCONNECT: "kafka-1:9092,kafka-2:9092,kafka-3:9092,kafka-4:9092"
    ports:
      - "9000:9000"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
      - kafka-4
    networks:
      - kafka-net

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.0
    container_name: control-center
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_KAFKA_BROKER_CONNECT: kafka-1:9092,kafka-2:9092,kafka-3:9092,kafka-4:9092
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9092,kafka-3:9092,kafka-4:9092
      CONTROL_CENTER_REPLICATION_FACTOR: 1
    volumes:
      - ./data/control-center:/var/lib/control-center
    networks:
      - kafka-net

  kafka-connect:
    image: debezium/connect:3.0.0.Final
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka-1:9092,kafka-2:9092,kafka-3:9092,kafka-4:9092
      - GROUP_ID=kafka-connect-group
      - CONFIG_STORAGE_TOPIC=connect-configs
      - OFFSET_STORAGE_TOPIC=connect-offsets
      - STATUS_STORAGE_TOPIC=connect-status
      - KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      # - CONFIG_STORAGE_REPLICATION_FACTOR=3
      # - OFFSET_STORAGE_REPLICATION_FACTOR=3
      # - STATUS_STORAGE_REPLICATION_FACTOR=3
      # - CONFIG_STORAGE_PARTITIONS=1
      # - OFFSET_STORAGE_PARTITIONS=25
      # - STATUS_STORAGE_PARTITIONS=1
      # - TOPIC_CREATION_ENABLE=true
      # - TOPIC_CREATION_DEFAULT_REPLICATION_FACTOR=3
      # - TOPIC_CREATION_DEFAULT_PARTITIONS=1
      # - TOPIC_CREATION_DEFAULT_CLEANUP_POLICY=compact
      # - REST_ADVERTISED_HOST_NAME=kafka-connect
      - PLUGIN_PATH=/usr/share/java
    volumes:
      - ./data/kafka-connect:/var/lib/kafka-connect
      - ./data/kafka-connect-plugin:/usr/share/java
    #   - ./debezium-connector-jdbc-3.0.8.Final-plugin.tar.gz:/tmp/debezium-connector-jdbc-3.0.8.Final-plugin.tar.gz
    # command: sh -c "tar -xzf /tmp/debezium-connector-jdbc-3.0.8.Final-plugin.tar.gz -C /usr/share/java && sleep infinity"
    networks:
      - kafka-net
    depends_on:
      - kafka-1
      - zookeeper

  debezium-ui:
    image: debezium/debezium-ui:latest
    container_name: debezium-ui
    ports:
      - "8090:8080"
    environment:
      - KAFKA_CONNECT_URIS=http://kafka-connect:8083
    networks:
      - kafka-net
    depends_on:
      - kafka-connect

  postgres-1:
    image: postgres:17.4
    container_name: postgres-1
    restart: always
    environment:
      POSTGRES_USER: root1
      POSTGRES_PASSWORD: root1
      POSTGRES_DB: kari
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres-1:/var/lib/postgresql/data
    networks:
      - kafka-net

  postgres-2:
    image: postgres:17.4
    container_name: postgres-2
    restart: always
    environment:
      POSTGRES_USER: root2
      POSTGRES_PASSWORD: root2
      POSTGRES_DB: kari
    ports:
      - "5433:5432"
    volumes:
      - ./data/postgres-2:/var/lib/postgresql/data
    networks:
      - kafka-net

  postgres-3:
    image: postgres:17.4
    container_name: postgres-3
    restart: always
    environment:
      POSTGRES_USER: root3
      POSTGRES_PASSWORD: root3
      POSTGRES_DB: kari
    ports:
      - "5434:5432"
    volumes:
      - ./data/postgres-3:/var/lib/postgresql/data
    networks:
      - kafka-net


networks:
  kafka-net:
    driver: bridge